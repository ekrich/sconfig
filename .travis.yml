language: scala

scala:
  - 2.11.12

jdk: 
  - openjdk8

os:
  - linux
  
dist: xenial

stages:
- name: test
- name: release
  if: (branch = master AND type = push) OR (tag IS present)

jobs:
  include:
  # stage="test" if no stage is specified
  - env: TEST="scalafmt"
    script: ./scripts/scalafmt --test
  - env: TEST="linux"
    before_install: ./scripts/travis-os-setup.sh
    script: sbt +test doc
  - env: TEST="linux" SCALAJS_VERSION=1.0.1
    script: sbt +sconfigJS/test
  - env: TEST="linux"
    jdk: openjdk11
    before_install: ./scripts/travis-os-setup.sh
    script: sbt +test
  - env: TEST="linux" SCALAJS_VERSION=1.0.1
    jdk: openjdk11
    script: sbt +sconfigJS/test
  - stage: release
    script:
    - export CI_SONATYPE_RELEASE=version # to avoid release (valid command)
    - sbt ci-release
    - export SCALAJS_VERSION=1.0.1
    - export CI_RELEASE=";+sconfigJS/publishSigned"
    - export CI_SONATYPE_RELEASE=sonatypeBundleRelease
    - export CI_CLEAN=version # don't clean first
    - sbt ci-release

cache:
  directories:
  - $HOME/.sbt/1.0/dependency
  - $HOME/.sbt/boot/scala*
  - $HOME/.sbt/launchers
  - $HOME/.ivy2/cache
  - $HOME/.coursier

before_cache:
- du -h -d 1 $HOME/.ivy2/cache
- du -h -d 2 $HOME/.sbt/
- find $HOME/.sbt -name "*.lock" -type f -delete
- find $HOME/.ivy2/cache -name "ivydata-*.properties" -type f -delete
- rm -rf $HOME/.ivy2/local

before_install:
- git fetch --tags
